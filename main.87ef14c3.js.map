{"version":3,"sources":["scripts/main.js"],"names":["inputs","document","querySelectorAll","formatWord","i","pattern","name","toUpperCase","slice","replace","forEach","input","htmlInnerValue","id","insertAdjacentHTML","placeholder"],"mappings":";AAAA,aAmBC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAjBD,IAAMA,EAAaC,EAAAA,SAASC,iBAAiB,UAc7C,SAASC,EAAWC,EAAGC,GACdL,OAAAA,EAAOI,GAAGE,KAAK,GAAGC,cAAgBP,EAAOI,GAAGE,KAChDE,MAAM,GAAGC,QAAQJ,EAAaA,IAAAA,OAAAA,IAdnCL,EAAOU,QAAQ,SAACC,EAAOP,GACfQ,IAAAA,EAC8BD,yCAAAA,OAAAA,EAAME,GACpCF,cAAAA,OAAAA,EAAML,KAAKG,QAAQ,OAAQ,SAFjC,sBAMAT,EAAOI,GAAGU,mBAAmB,cAAeF,GAE5CZ,EAAOI,GAAGW,YAAcZ,EAAWC,EAAG","file":"main.87ef14c3.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst inputs = [...document.querySelectorAll('input')];\n\ninputs.forEach((input, i) => {\n  const htmlInnerValue = `\n    <label class=\"field-label\" for=\"${input.id}\">\n      ${input.name.replace(/Name/, ' Name')}\n    </label>\n  `;\n\n  inputs[i].insertAdjacentHTML('beforebegin', htmlInnerValue);\n\n  inputs[i].placeholder = formatWord(i, 'Name');\n});\n\nfunction formatWord(i, pattern) {\n  return inputs[i].name[0].toUpperCase() + inputs[i].name\n    .slice(1).replace(pattern, ` ${pattern}`);\n}\n"]}